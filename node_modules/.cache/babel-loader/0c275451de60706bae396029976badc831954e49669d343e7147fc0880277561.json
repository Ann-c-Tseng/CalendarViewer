{"ast":null,"code":"const theDate = new Date();\nconsole.log(theDate);\nexport function getYear() {\n  var year = theDate.getFullYear();\n  return year;\n}\nfunction getMonthNum() {\n  var month = theDate.getMonth();\n  console.log(month);\n  return month;\n}\nfunction getDay() {\n  var day = theDate.getDate();\n  return day;\n}\nexport function getWeekDay() {\n  var weekDay = theDate.toString().slice(0, 3);\n  // console.log(\"The week day is: \" + weekDay);\n  return weekDay;\n}\nexport function getMonth() {\n  var monthNum = getMonthNum();\n  if (monthNum === 0) {\n    return \"January\";\n  } else if (monthNum === 1) {\n    return \"February\";\n  } else if (monthNum === 2) {\n    return \"March\";\n  } else if (monthNum === 3) {\n    return \"April\";\n  } else if (monthNum === 4) {\n    return \"May\";\n  } else if (monthNum === 5) {\n    return \"June\";\n  } else if (monthNum === 6) {\n    return \"July\";\n  } else if (monthNum === 7) {\n    return \"August\";\n  } else if (monthNum === 8) {\n    return \"September\";\n  } else if (monthNum === 9) {\n    return \"October\";\n  } else if (monthNum === 10) {\n    return \"November\";\n  } else {\n    return \"December\";\n  }\n}","map":{"version":3,"names":["theDate","Date","console","log","getYear","year","getFullYear","getMonthNum","month","getMonth","getDay","day","getDate","getWeekDay","weekDay","toString","slice","monthNum"],"sources":["/Users/anntseng/Desktop/CalendarViewer/reactcalendar/src/Components/Calendar/DateFunctions.js"],"sourcesContent":["const theDate = new Date();\nconsole.log(theDate)\n\nexport function getYear() {\n    var year = theDate.getFullYear();\n    return year;\n}\n\nfunction getMonthNum() {\n    var month = theDate.getMonth();\n    console.log(month)\n    return month;\n}\n\nfunction getDay() {\n    var day = theDate.getDate();\n    return day;\n}\n\nexport function getWeekDay() {\n    var weekDay = theDate.toString().slice(0,3);\n    // console.log(\"The week day is: \" + weekDay);\n    return weekDay;\n}\n\nexport function getMonth() {\n    var monthNum = getMonthNum();\n    if(monthNum === 0) {\n        return \"January\";\n    } else if(monthNum === 1) {\n        return \"February\";\n    } else if(monthNum === 2) {\n        return \"March\";\n    } else if(monthNum === 3) {\n        return \"April\";\n    } else if(monthNum === 4) {\n        return \"May\";\n    } else if(monthNum === 5) {\n        return \"June\";\n    } else if(monthNum === 6) {\n        return \"July\";\n    } else if(monthNum === 7) {\n        return \"August\";\n    } else if(monthNum === 8) {\n        return \"September\";\n    } else if(monthNum === 9) {\n        return \"October\";\n    } else if(monthNum === 10) {\n        return \"November\";\n    }else {\n        return \"December\";\n    }\n}\n\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,IAAIC,IAAI,CAAC,CAAC;AAC1BC,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC;AAEpB,OAAO,SAASI,OAAOA,CAAA,EAAG;EACtB,IAAIC,IAAI,GAAGL,OAAO,CAACM,WAAW,CAAC,CAAC;EAChC,OAAOD,IAAI;AACf;AAEA,SAASE,WAAWA,CAAA,EAAG;EACnB,IAAIC,KAAK,GAAGR,OAAO,CAACS,QAAQ,CAAC,CAAC;EAC9BP,OAAO,CAACC,GAAG,CAACK,KAAK,CAAC;EAClB,OAAOA,KAAK;AAChB;AAEA,SAASE,MAAMA,CAAA,EAAG;EACd,IAAIC,GAAG,GAAGX,OAAO,CAACY,OAAO,CAAC,CAAC;EAC3B,OAAOD,GAAG;AACd;AAEA,OAAO,SAASE,UAAUA,CAAA,EAAG;EACzB,IAAIC,OAAO,GAAGd,OAAO,CAACe,QAAQ,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC;EAC3C;EACA,OAAOF,OAAO;AAClB;AAEA,OAAO,SAASL,QAAQA,CAAA,EAAG;EACvB,IAAIQ,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC5B,IAAGU,QAAQ,KAAK,CAAC,EAAE;IACf,OAAO,SAAS;EACpB,CAAC,MAAM,IAAGA,QAAQ,KAAK,CAAC,EAAE;IACtB,OAAO,UAAU;EACrB,CAAC,MAAM,IAAGA,QAAQ,KAAK,CAAC,EAAE;IACtB,OAAO,OAAO;EAClB,CAAC,MAAM,IAAGA,QAAQ,KAAK,CAAC,EAAE;IACtB,OAAO,OAAO;EAClB,CAAC,MAAM,IAAGA,QAAQ,KAAK,CAAC,EAAE;IACtB,OAAO,KAAK;EAChB,CAAC,MAAM,IAAGA,QAAQ,KAAK,CAAC,EAAE;IACtB,OAAO,MAAM;EACjB,CAAC,MAAM,IAAGA,QAAQ,KAAK,CAAC,EAAE;IACtB,OAAO,MAAM;EACjB,CAAC,MAAM,IAAGA,QAAQ,KAAK,CAAC,EAAE;IACtB,OAAO,QAAQ;EACnB,CAAC,MAAM,IAAGA,QAAQ,KAAK,CAAC,EAAE;IACtB,OAAO,WAAW;EACtB,CAAC,MAAM,IAAGA,QAAQ,KAAK,CAAC,EAAE;IACtB,OAAO,SAAS;EACpB,CAAC,MAAM,IAAGA,QAAQ,KAAK,EAAE,EAAE;IACvB,OAAO,UAAU;EACrB,CAAC,MAAK;IACF,OAAO,UAAU;EACrB;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}