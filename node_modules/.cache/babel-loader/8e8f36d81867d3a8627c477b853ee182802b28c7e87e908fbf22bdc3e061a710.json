{"ast":null,"code":"const theDate = new Date();\nexport function getYear() {\n  var year = theDate.getFullYear();\n  return year;\n}\nfunction isLeapYear() {\n  return getYear() % 4 === 0 && getYear() % 100 !== 0 || getYear() % 400 === 0;\n}\nfunction getMonthNum() {\n  var month = theDate.getMonth();\n  return month;\n}\nfunction getDay() {\n  var day = theDate.getDate();\n  return day;\n}\nexport function getWeekDay() {\n  var weekDay = theDate.toString().slice(0, 3);\n  // console.log(\"The week day is: \" + weekDay);\n  return weekDay;\n}\nexport function getMonth() {\n  var monthNum = getMonthNum();\n  if (monthNum === 0) {\n    return \"January\";\n  } else if (monthNum === 1) {\n    return \"February\";\n  } else if (monthNum === 2) {\n    return \"March\";\n  } else if (monthNum === 3) {\n    return \"April\";\n  } else if (monthNum === 4) {\n    return \"May\";\n  } else if (monthNum === 5) {\n    return \"June\";\n  } else if (monthNum === 6) {\n    return \"July\";\n  } else if (monthNum === 7) {\n    return \"August\";\n  } else if (monthNum === 8) {\n    return \"September\";\n  } else if (monthNum === 9) {\n    return \"October\";\n  } else if (monthNum === 10) {\n    return \"November\";\n  } else {\n    return \"December\";\n  }\n}\nexport function getDaysArray(monthNum) {\n  var numsArr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31];\n  if (monthNum === 1 && isLeapYear()) {\n    //If February and leap year, has 29 days\n    return numsArr.slice(0, 30);\n  } else if (monthNum === 1) {\n    //Else February has 28 days\n    return numsArr.slice(0, 29);\n  } else {\n    if (monthNum === 0 || monthNum === 2 || monthNum === 4 || monthNum === 6 || monthNum === 7 || monthNum === 9 || monthNum === 11) {\n      //Months with 31 days: January, March, May, July, August, October, and December\n      return numsArr.slice(0, 32);\n    } else {\n      //Months with 30 days: April, June, September, and November\n      return numsArr.slice(0, 31);\n    }\n  }\n}","map":{"version":3,"names":["theDate","Date","getYear","year","getFullYear","isLeapYear","getMonthNum","month","getMonth","getDay","day","getDate","getWeekDay","weekDay","toString","slice","monthNum","getDaysArray","numsArr"],"sources":["/Users/anntseng/Desktop/CalendarViewer/reactcalendar/src/Components/Calendar/DateFunctions.js"],"sourcesContent":["const theDate = new Date();\n\nexport function getYear() {\n    var year = theDate.getFullYear();\n    return year;\n}\n\nfunction isLeapYear() {\n    return ((getYear() % 4 === 0) && (getYear() % 100 !== 0)) || (getYear() % 400 === 0);\n}\n\nfunction getMonthNum() {\n    var month = theDate.getMonth();\n    return month;\n}\n\nfunction getDay() {\n    var day = theDate.getDate();\n    return day;\n}\n\nexport function getWeekDay() {\n    var weekDay = theDate.toString().slice(0,3);\n    // console.log(\"The week day is: \" + weekDay);\n    return weekDay;\n}\n\nexport function getMonth() {\n    var monthNum = getMonthNum();\n    if(monthNum === 0) {\n        return \"January\";\n    } else if(monthNum === 1) {\n        return \"February\";\n    } else if(monthNum === 2) {\n        return \"March\";\n    } else if(monthNum === 3) {\n        return \"April\";\n    } else if(monthNum === 4) {\n        return \"May\";\n    } else if(monthNum === 5) {\n        return \"June\";\n    } else if(monthNum === 6) {\n        return \"July\";\n    } else if(monthNum === 7) {\n        return \"August\";\n    } else if(monthNum === 8) {\n        return \"September\";\n    } else if(monthNum === 9) {\n        return \"October\";\n    } else if(monthNum === 10) {\n        return \"November\";\n    }else {\n        return \"December\";\n    }\n}\n\nexport function getDaysArray(monthNum) {\n    var numsArr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, \n        16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]\n\n    if(monthNum === 1 && isLeapYear()) { //If February and leap year, has 29 days\n        return numsArr.slice(0,30);\n    } else if(monthNum === 1) { //Else February has 28 days\n        return numsArr.slice(0,29);\n    } else {\n        if(monthNum === 0 || monthNum === 2 || monthNum === 4 || monthNum === 6 || monthNum === 7 || monthNum === 9 || monthNum === 11) {\n            //Months with 31 days: January, March, May, July, August, October, and December\n            return numsArr.slice(0,32);\n        } else {\n            //Months with 30 days: April, June, September, and November\n            return numsArr.slice(0, 31);\n        }\n    }\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}